DESKTOP="$(cygpath "$USERPROFILE\\Desktop")"
export DESKTOP

if [ -z "$USER" ]; then
    USER="$USERNAME"
fi
export USER

alias np='notepad'
alias npp='notepad /p'
alias ie='"/cygdrive/c/program files/internet explorer/iexplore.exe"'
alias cdd='cd "$DESKTOP"'

alias 7zc='/cygdrive/c/Program\ Files/7-Zip/7z.exe a -t7z -m0=lzma -mx=9 -mfb=64 -md=32m -ms=on'
alias 7zx='/cygdrive/c/Program\ Files/7-Zip/7z.exe x'

we() {
    if [ -z "$1" ]; then
        dir="$(cygpath -w ..)"
    else
        dir="$(cygpath -w "$1")"
    fi
    explorer.exe /n, /e, "$dir" &
    unset dir
}

man2txt() {
    man $1 | col -b | u2d > $1.txt
}

npman() {
    man2txt $1 && notepad $1.txt
}

nppman() {
    man2txt $1 && notepad /p $1.txt
}

xo() {
    cat /dev/clipboard
}

cdc() {
    cd "$(cygpath "$(sed 's,/$,,'  /dev/clipboard)")"
}

cj() {
    cd "$(cygpath -w "$@")"
}

alias pacl='cygcheck -l'
alias pacs='cygcheck -p'
paco() {
    if [ -f "$1" ]; then
        cygcheck -f "$1"
    else
        cygcheck -f $(which "$1")
    fi
}

#FIXME use setup.exe for paci and pacr

alias nppr='pr -3 -t -l 65'

mkdest() {
    if [ $# -gt 0 ]; then
        mkdir -p "$@" && cd "$@" || return 1
    fi
    dest="$(cygpath -w "$(pwd)")"
    log="$(echo "$dest" | sed 's,.*\\,,')-robocopy.log"
    export dest
    export log
    echo $dest
}

robo() {
    robocopy . "$dest"  /e /dcopy:t /copy:dat /r:5 /w:5 /v /x /ts /fp /tee /log+:"$dest-robocopy.log"
    (cd "$(cygpath "$dest")"/.. && \
    mv "$log" "tmp-$log" && \
    sed 's/\r *[0-9.%]*//g' "tmp-$log" | u2d >"$log" && \
    rm -f "tmp-$log")
}

open() {
    #let's be like OS X
    for i in "$@"; do
        cygstart "$i"
    done
}

#FIXME it fails on the space
#alias xl='/cygdrive/c/Program Files/Microsoft Office/Office14/EXCEL.EXE'
umask 0000

locof() {
    cygpath -w "$(readlink -f "$@")"
}

myip() {
    ipconfig | sed -n 's/^\s*IPv4 Address[. ]*: *//p'
}

export X_TERMINAL_EMULATOR=uxterm
export NO_X_TERMINAL_EMULATOR=mintty
export TERMINAL_MULTIPLEXER=screen

# This yanked from 
#http://www.electricmonk.nl/log/2012/04/24/re-use-existing-ssh-agent-cygwin-et-al/
# If no SSH agent is already running, start one now. Re-use sockets so we never
# have to start more than one session.
# You'll still need to run ssh-add once, manually.
export SSH_AUTH_SOCK="$HOME/.ssh-socket"
ssh-add -l >/dev/null 2>&1
if [ $? = 2 ]; then
   # No ssh-agent running
   rm -rf "$SSH_AUTH_SOCK"
   # >| allows output redirection to over-write files if no clobber is set
   ssh-agent -a "$SSH_AUTH_SOCK" > /tmp/.ssh-script
   . /tmp/.ssh-script
   echo $SSH_AGENT_PID > ~/.ssh-agent-pid
   rm /tmp/.ssh-script
   ssh-add
fi

. $_BASH_DIST_CONFIGDIR/gnu

_OSRC="$_BASH_OS_CONFIGDIR/windows"
# vim:ft=sh

